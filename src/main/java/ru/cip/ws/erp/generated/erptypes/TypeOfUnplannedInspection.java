//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.09.12 at 05:39:47 PM MSK 
//


package ru.cip.ws.erp.generated.erptypes;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for TypeOfUnplannedInspection.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="TypeOfUnplannedInspection"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="Заявление КО"/&gt;
 *     &lt;enumeration value="Уведомление"/&gt;
 *     &lt;enumeration value="Требование прокуратуры"/&gt;
 *     &lt;enumeration value="Без уведомления"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "TypeOfUnplannedInspection", namespace = "urn://ru.gov.proc.erp.communication/base/2.0.5")
@XmlEnum
public enum TypeOfUnplannedInspection {

    @XmlEnumValue("\u0417\u0430\u044f\u0432\u043b\u0435\u043d\u0438\u0435 \u041a\u041e")
    ЗАЯВЛЕНИЕ_КО("\u0417\u0430\u044f\u0432\u043b\u0435\u043d\u0438\u0435 \u041a\u041e"),
    @XmlEnumValue("\u0423\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0435")
    УВЕДОМЛЕНИЕ("\u0423\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0435"),
    @XmlEnumValue("\u0422\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u043a\u0443\u0440\u0430\u0442\u0443\u0440\u044b")
    ТРЕБОВАНИЕ_ПРОКУРАТУРЫ("\u0422\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u043a\u0443\u0440\u0430\u0442\u0443\u0440\u044b"),
    @XmlEnumValue("\u0411\u0435\u0437 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u044f")
    БЕЗ_УВЕДОМЛЕНИЯ("\u0411\u0435\u0437 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u044f");
    private final String value;

    TypeOfUnplannedInspection(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static TypeOfUnplannedInspection fromValue(String v) {
        for (TypeOfUnplannedInspection c: TypeOfUnplannedInspection.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
