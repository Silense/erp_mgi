<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:jms="http://www.springframework.org/schema/jms"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <context:component-scan base-package="ru" />

    <context:property-placeholder location="classpath:wmq.properties, classpath:db.properties, classpath:app.properties" ignore-unresolvable="true"/>

    <context:annotation-config />


    <!-- JMS - MQ Configuration ################################################################################################################# -->
    <bean class="com.ibm.mq.jms.MQQueueConnectionFactory" id="mqBindingConnectionFactory"/>

    <!-- Use this factory in CLIENT mode -->
    <bean class="com.ibm.mq.jms.MQQueueConnectionFactory" id="mqClientConnectionFactory"
          p:connectionNameList="${wmq.qmgr.hosts}"
          p:queueManager="${wmq.qmgr.name}"
          p:CCSID="${wmq.qmgr.ccid}"
          p:channel="${wmq.qmgr.channel}"
          p:clientReconnectTimeout="${wmq.qmgr.clientReconnectTimeout}">
        <property name="transportType">
            <util:constant static-field="com.ibm.msg.client.wmq.WMQConstants.WMQ_CM_CLIENT"/>
        </property>
        <property name="clientReconnectOptions">
            <util:constant static-field="com.ibm.msg.client.wmq.WMQConstants.WMQ_CLIENT_RECONNECT"/>
        </property>
    </bean>

    <!-- JMS Queue Connection Factory -->
    <bean class="org.springframework.jms.connection.SingleConnectionFactory" id="jmsQueueConnectionFactory" p:reconnectOnException="true"
          p:targetConnectionFactory-ref="mqBindingConnectionFactory">
        <!-- non-container's use -->
    </bean>

    <bean class="org.springframework.jms.connection.UserCredentialsConnectionFactoryAdapter" id="jmsQueueConnectionFactorySecured"
          p:targetConnectionFactory-ref="mqClientConnectionFactory"
          p:username="${wmq.qmgr.login}"
          p:password="${wmq.qmgr.password}"
            />


    <!-- JMS Destination Resolver -->
    <bean class="org.springframework.jms.support.destination.DynamicDestinationResolver"  id="jmsDestinationResolver"/>

    <!-- JMS Queue Template -->
    <bean class="org.springframework.jms.core.JmsTemplate" id="jmsQueueTemplate"
          p:receiveTimeout="10000" p:destinationResolver-ref="jmsDestinationResolver"
          p:connectionFactory-ref="jmsQueueConnectionFactorySecured">
    </bean>

    <bean class="ru.cip.ws.erp.jms.MQMessageListener" id="mqListener" lazy-init="true"/>

    <bean class="ru.cip.ws.erp.jms.MQMessageSender" id ="messageSender" p:destinationQueue="${wmq.queue.request}"/>

    <jms:listener-container acknowledge="transacted" concurrency="1" connection-factory="jmsQueueConnectionFactorySecured" container-type="default">
        <jms:listener ref="mqListener" destination="${wmq.queue.response}"/>
    </jms:listener-container>

    <!-- DatabaseConfiguration ################################################################################################################# -->

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${jdbc.driver}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        <property name="url" value="${jdbc.url}" />
    </bean>

    <bean id="txManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="dataSource" ref="dataSource" />
        <property name="entityManagerFactory" ref="entityManagerFactoryBean"/>
        <property name="defaultTimeout" value="36000" />
    </bean>

    <!-- This produces a container-managed EntityManagerFactory;
         rather than application-managed EntityManagerFactory as in case of LocalEntityManagerFactoryBean-->
    <bean id="entityManagerFactoryBean" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <!-- This makes /META-INF/persistence.xml is no longer necessary -->
        <property name="packagesToScan" value="ru.cip.ws.erp.jdbc.entity" />
        <!-- JpaVendorAdapter implementation for Hibernate EntityManager.
             Exposes Hibernate's persistence provider and EntityManager extension interface -->
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
        </property>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</prop>
            </props>
        </property>
    </bean>

    <!-- responsible for registering the necessary Spring components that power annotation-driven transaction management;
       such as when @Transactional methods are invoked -->
    <tx:annotation-driven />


</beans>
